// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: profile_info.proto

package profile // import "gitlab.com/stream/buffers/profile"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "gitlab.com/stream/buffers/common"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProfileInfo struct {
	Type                 string           `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                   string           `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                 *Name            `protobuf:"bytes,10,opt,name=name" json:"name,omitempty"`
	Gender               string           `protobuf:"bytes,3,opt,name=gender,proto3" json:"gender,omitempty"`
	Address              *common.Address  `protobuf:"bytes,4,opt,name=address" json:"address,omitempty"`
	Hobbies              []string         `protobuf:"bytes,5,rep,name=hobbies" json:"hobbies,omitempty"`
	Dob                  string           `protobuf:"bytes,6,opt,name=dob,proto3" json:"dob,omitempty"`
	Registered           string           `protobuf:"bytes,7,opt,name=registered,proto3" json:"registered,omitempty"`
	Picture              *Picture         `protobuf:"bytes,8,opt,name=picture" json:"picture,omitempty"`
	WorkEducation        []*WorkEducation `protobuf:"bytes,9,rep,name=work_education,json=workEducation" json:"work_education,omitempty"`
	TagLine              string           `protobuf:"bytes,11,opt,name=tag_line,json=tagLine,proto3" json:"tag_line,omitempty"`
	Verified             bool             `protobuf:"varint,12,opt,name=verified,proto3" json:"verified,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ProfileInfo) Reset()         { *m = ProfileInfo{} }
func (m *ProfileInfo) String() string { return proto.CompactTextString(m) }
func (*ProfileInfo) ProtoMessage()    {}
func (*ProfileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_profile_info_907f7b1ca2b6dfcd, []int{0}
}
func (m *ProfileInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProfileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProfileInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ProfileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileInfo.Merge(dst, src)
}
func (m *ProfileInfo) XXX_Size() int {
	return m.Size()
}
func (m *ProfileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileInfo proto.InternalMessageInfo

func (m *ProfileInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ProfileInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProfileInfo) GetName() *Name {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ProfileInfo) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *ProfileInfo) GetAddress() *common.Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *ProfileInfo) GetHobbies() []string {
	if m != nil {
		return m.Hobbies
	}
	return nil
}

func (m *ProfileInfo) GetDob() string {
	if m != nil {
		return m.Dob
	}
	return ""
}

func (m *ProfileInfo) GetRegistered() string {
	if m != nil {
		return m.Registered
	}
	return ""
}

func (m *ProfileInfo) GetPicture() *Picture {
	if m != nil {
		return m.Picture
	}
	return nil
}

func (m *ProfileInfo) GetWorkEducation() []*WorkEducation {
	if m != nil {
		return m.WorkEducation
	}
	return nil
}

func (m *ProfileInfo) GetTagLine() string {
	if m != nil {
		return m.TagLine
	}
	return ""
}

func (m *ProfileInfo) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

type WorkEducation struct {
	Type                 string          `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Place                string          `protobuf:"bytes,2,opt,name=place,proto3" json:"place,omitempty"`
	Department           string          `protobuf:"bytes,3,opt,name=department,proto3" json:"department,omitempty"`
	Location             *common.Address `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WorkEducation) Reset()         { *m = WorkEducation{} }
func (m *WorkEducation) String() string { return proto.CompactTextString(m) }
func (*WorkEducation) ProtoMessage()    {}
func (*WorkEducation) Descriptor() ([]byte, []int) {
	return fileDescriptor_profile_info_907f7b1ca2b6dfcd, []int{1}
}
func (m *WorkEducation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WorkEducation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WorkEducation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *WorkEducation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkEducation.Merge(dst, src)
}
func (m *WorkEducation) XXX_Size() int {
	return m.Size()
}
func (m *WorkEducation) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkEducation.DiscardUnknown(m)
}

var xxx_messageInfo_WorkEducation proto.InternalMessageInfo

func (m *WorkEducation) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *WorkEducation) GetPlace() string {
	if m != nil {
		return m.Place
	}
	return ""
}

func (m *WorkEducation) GetDepartment() string {
	if m != nil {
		return m.Department
	}
	return ""
}

func (m *WorkEducation) GetLocation() *common.Address {
	if m != nil {
		return m.Location
	}
	return nil
}

type Name struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Prefix               string   `protobuf:"bytes,3,opt,name=prefix,proto3" json:"prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Name) Reset()         { *m = Name{} }
func (m *Name) String() string { return proto.CompactTextString(m) }
func (*Name) ProtoMessage()    {}
func (*Name) Descriptor() ([]byte, []int) {
	return fileDescriptor_profile_info_907f7b1ca2b6dfcd, []int{2}
}
func (m *Name) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Name) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Name.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Name) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Name.Merge(dst, src)
}
func (m *Name) XXX_Size() int {
	return m.Size()
}
func (m *Name) XXX_DiscardUnknown() {
	xxx_messageInfo_Name.DiscardUnknown(m)
}

var xxx_messageInfo_Name proto.InternalMessageInfo

func (m *Name) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Name) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Name) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

type Picture struct {
	Profile              string   `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	Cover                string   `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Picture) Reset()         { *m = Picture{} }
func (m *Picture) String() string { return proto.CompactTextString(m) }
func (*Picture) ProtoMessage()    {}
func (*Picture) Descriptor() ([]byte, []int) {
	return fileDescriptor_profile_info_907f7b1ca2b6dfcd, []int{3}
}
func (m *Picture) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Picture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Picture.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Picture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Picture.Merge(dst, src)
}
func (m *Picture) XXX_Size() int {
	return m.Size()
}
func (m *Picture) XXX_DiscardUnknown() {
	xxx_messageInfo_Picture.DiscardUnknown(m)
}

var xxx_messageInfo_Picture proto.InternalMessageInfo

func (m *Picture) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

func (m *Picture) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

type TravelPost struct {
	Uid                  string   `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Post                 string   `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	PostId               string   `protobuf:"bytes,3,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TravelPost) Reset()         { *m = TravelPost{} }
func (m *TravelPost) String() string { return proto.CompactTextString(m) }
func (*TravelPost) ProtoMessage()    {}
func (*TravelPost) Descriptor() ([]byte, []int) {
	return fileDescriptor_profile_info_907f7b1ca2b6dfcd, []int{4}
}
func (m *TravelPost) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TravelPost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TravelPost.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TravelPost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TravelPost.Merge(dst, src)
}
func (m *TravelPost) XXX_Size() int {
	return m.Size()
}
func (m *TravelPost) XXX_DiscardUnknown() {
	xxx_messageInfo_TravelPost.DiscardUnknown(m)
}

var xxx_messageInfo_TravelPost proto.InternalMessageInfo

func (m *TravelPost) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *TravelPost) GetPost() string {
	if m != nil {
		return m.Post
	}
	return ""
}

func (m *TravelPost) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TravelPost) GetPostId() string {
	if m != nil {
		return m.PostId
	}
	return ""
}

func init() {
	proto.RegisterType((*ProfileInfo)(nil), "profile.ProfileInfo")
	proto.RegisterType((*WorkEducation)(nil), "profile.WorkEducation")
	proto.RegisterType((*Name)(nil), "profile.Name")
	proto.RegisterType((*Picture)(nil), "profile.Picture")
	proto.RegisterType((*TravelPost)(nil), "profile.TravelPost")
}
func (m *ProfileInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProfileInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Type) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.Type)))
		i += copy(dAtA[i:], m.Type)
	}
	if len(m.Id) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.Gender) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.Gender)))
		i += copy(dAtA[i:], m.Gender)
	}
	if m.Address != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(m.Address.Size()))
		n1, err := m.Address.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if len(m.Hobbies) > 0 {
		for _, s := range m.Hobbies {
			dAtA[i] = 0x2a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.Dob) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.Dob)))
		i += copy(dAtA[i:], m.Dob)
	}
	if len(m.Registered) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.Registered)))
		i += copy(dAtA[i:], m.Registered)
	}
	if m.Picture != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(m.Picture.Size()))
		n2, err := m.Picture.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if len(m.WorkEducation) > 0 {
		for _, msg := range m.WorkEducation {
			dAtA[i] = 0x4a
			i++
			i = encodeVarintProfileInfo(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Name != nil {
		dAtA[i] = 0x52
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(m.Name.Size()))
		n3, err := m.Name.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	if len(m.TagLine) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.TagLine)))
		i += copy(dAtA[i:], m.TagLine)
	}
	if m.Verified {
		dAtA[i] = 0x60
		i++
		if m.Verified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *WorkEducation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WorkEducation) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Type) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.Type)))
		i += copy(dAtA[i:], m.Type)
	}
	if len(m.Place) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.Place)))
		i += copy(dAtA[i:], m.Place)
	}
	if len(m.Department) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.Department)))
		i += copy(dAtA[i:], m.Department)
	}
	if m.Location != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(m.Location.Size()))
		n4, err := m.Location.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Name) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Name) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.FirstName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.FirstName)))
		i += copy(dAtA[i:], m.FirstName)
	}
	if len(m.LastName) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.LastName)))
		i += copy(dAtA[i:], m.LastName)
	}
	if len(m.Prefix) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.Prefix)))
		i += copy(dAtA[i:], m.Prefix)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Picture) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Picture) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Profile) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.Profile)))
		i += copy(dAtA[i:], m.Profile)
	}
	if len(m.Cover) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.Cover)))
		i += copy(dAtA[i:], m.Cover)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TravelPost) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TravelPost) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Post) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.Post)))
		i += copy(dAtA[i:], m.Post)
	}
	if len(m.Uid) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.Uid)))
		i += copy(dAtA[i:], m.Uid)
	}
	if len(m.PostId) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.PostId)))
		i += copy(dAtA[i:], m.PostId)
	}
	if len(m.Type) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintProfileInfo(dAtA, i, uint64(len(m.Type)))
		i += copy(dAtA[i:], m.Type)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintProfileInfo(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *ProfileInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	l = len(m.Gender)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	if m.Address != nil {
		l = m.Address.Size()
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	if len(m.Hobbies) > 0 {
		for _, s := range m.Hobbies {
			l = len(s)
			n += 1 + l + sovProfileInfo(uint64(l))
		}
	}
	l = len(m.Dob)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	l = len(m.Registered)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	if m.Picture != nil {
		l = m.Picture.Size()
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	if len(m.WorkEducation) > 0 {
		for _, e := range m.WorkEducation {
			l = e.Size()
			n += 1 + l + sovProfileInfo(uint64(l))
		}
	}
	if m.Name != nil {
		l = m.Name.Size()
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	l = len(m.TagLine)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	if m.Verified {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WorkEducation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	l = len(m.Place)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	l = len(m.Department)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	if m.Location != nil {
		l = m.Location.Size()
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Name) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FirstName)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	l = len(m.LastName)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	l = len(m.Prefix)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Picture) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Profile)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TravelPost) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Post)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	l = len(m.Uid)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	l = len(m.PostId)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovProfileInfo(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovProfileInfo(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozProfileInfo(x uint64) (n int) {
	return sovProfileInfo(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ProfileInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProfileInfo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProfileInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProfileInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Gender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Address == nil {
				m.Address = &common.Address{}
			}
			if err := m.Address.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hobbies", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hobbies = append(m.Hobbies, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dob", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Dob = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Registered", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Registered = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Picture", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Picture == nil {
				m.Picture = &Picture{}
			}
			if err := m.Picture.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorkEducation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WorkEducation = append(m.WorkEducation, &WorkEducation{})
			if err := m.WorkEducation[len(m.WorkEducation)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Name == nil {
				m.Name = &Name{}
			}
			if err := m.Name.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagLine", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TagLine = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Verified = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipProfileInfo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProfileInfo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WorkEducation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProfileInfo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WorkEducation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WorkEducation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Place", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Place = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Department", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Department = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Location == nil {
				m.Location = &common.Address{}
			}
			if err := m.Location.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProfileInfo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProfileInfo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Name) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProfileInfo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Name: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Name: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefix", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Prefix = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProfileInfo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProfileInfo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Picture) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProfileInfo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Picture: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Picture: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Profile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Profile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProfileInfo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProfileInfo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TravelPost) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProfileInfo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TravelPost: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TravelPost: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Post", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Post = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfileInfo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProfileInfo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProfileInfo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProfileInfo(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProfileInfo
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProfileInfo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthProfileInfo
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowProfileInfo
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipProfileInfo(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthProfileInfo = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProfileInfo   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("profile_info.proto", fileDescriptor_profile_info_907f7b1ca2b6dfcd) }

var fileDescriptor_profile_info_907f7b1ca2b6dfcd = []byte{
	// 512 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x25, 0xdb, 0x6e, 0x93, 0x4e, 0xb7, 0xcb, 0xca, 0x42, 0xc5, 0x2c, 0xa2, 0xea, 0xf6, 0x54,
	0x40, 0x6a, 0xa5, 0xdd, 0x13, 0x07, 0x0e, 0x20, 0x71, 0x58, 0x09, 0xa1, 0x2a, 0x42, 0x42, 0xda,
	0x4b, 0xe4, 0xd4, 0x93, 0x60, 0x6d, 0x12, 0x47, 0xb6, 0xdb, 0x85, 0x0f, 0x80, 0x6f, 0xe0, 0x93,
	0x38, 0xf2, 0x09, 0xa8, 0xfc, 0x08, 0xb2, 0xe3, 0x84, 0x22, 0xc1, 0x6d, 0xde, 0x7b, 0xb6, 0x67,
	0xe6, 0xcd, 0x18, 0x48, 0xad, 0x64, 0x26, 0x0a, 0x4c, 0x44, 0x95, 0xc9, 0x65, 0xad, 0xa4, 0x91,
	0x24, 0xf4, 0xdc, 0xf9, 0xc9, 0x46, 0x96, 0xa5, 0xac, 0x1a, 0x7a, 0xfe, 0xa5, 0x07, 0xa3, 0x75,
	0xa3, 0x5c, 0x57, 0x99, 0x24, 0x04, 0xfa, 0xe6, 0x73, 0x8d, 0x34, 0x98, 0x05, 0x8b, 0x61, 0xec,
	0x62, 0x72, 0x0a, 0x47, 0x82, 0xd3, 0x23, 0xc7, 0x1c, 0x09, 0x4e, 0x26, 0x30, 0xc8, 0xb1, 0xe2,
	0xa8, 0x68, 0xcf, 0x71, 0x1e, 0x91, 0xa7, 0x10, 0x32, 0xce, 0x15, 0x6a, 0x4d, 0xfb, 0xb3, 0x60,
	0x31, 0xba, 0xbc, 0xbf, 0xf4, 0xb9, 0x5e, 0x35, 0x74, 0xdc, 0xea, 0x84, 0x42, 0xf8, 0x51, 0xa6,
	0xa9, 0x40, 0x4d, 0x8f, 0x67, 0xbd, 0xc5, 0x30, 0x6e, 0x21, 0x39, 0x83, 0x1e, 0x97, 0x29, 0x1d,
	0xb8, 0x97, 0x6d, 0x48, 0xa6, 0x00, 0x0a, 0x73, 0xa1, 0x0d, 0x2a, 0xe4, 0x34, 0x74, 0xc2, 0x01,
	0x43, 0x9e, 0x41, 0x58, 0x8b, 0x8d, 0xd9, 0x2a, 0xa4, 0x91, 0x4b, 0x7b, 0xb6, 0xf4, 0xbd, 0x2e,
	0xd7, 0x0d, 0x1f, 0xb7, 0x07, 0xc8, 0x4b, 0x38, 0xbd, 0x93, 0xea, 0x36, 0x41, 0xbe, 0xdd, 0x30,
	0x23, 0x64, 0x45, 0x87, 0xb3, 0xde, 0x62, 0x74, 0x39, 0xe9, 0xae, 0x7c, 0x90, 0xea, 0xf6, 0x4d,
	0xab, 0xc6, 0xe3, 0xbb, 0x43, 0x48, 0x2e, 0xa0, 0x5f, 0xb1, 0x12, 0x29, 0xb8, 0x3c, 0xe3, 0xee,
	0xd2, 0x3b, 0x56, 0x62, 0xec, 0x24, 0xf2, 0x08, 0x22, 0xc3, 0xf2, 0xa4, 0x10, 0x15, 0xd2, 0x91,
	0xab, 0x35, 0x34, 0x2c, 0x7f, 0x2b, 0x2a, 0x24, 0xe7, 0x10, 0xed, 0x50, 0x89, 0x4c, 0x20, 0xa7,
	0x27, 0xb3, 0x60, 0x11, 0xc5, 0x1d, 0x9e, 0x7f, 0x0d, 0x60, 0xfc, 0x57, 0xea, 0x7f, 0x4e, 0xe2,
	0x01, 0x1c, 0xd7, 0x05, 0xdb, 0xa0, 0x1f, 0x46, 0x03, 0xac, 0x41, 0x1c, 0x6b, 0xa6, 0x4c, 0x89,
	0x95, 0xf1, 0x33, 0x39, 0x60, 0xc8, 0x73, 0x88, 0x0a, 0xe9, 0xdb, 0xfd, 0xcf, 0x60, 0xba, 0x03,
	0xf3, 0x1b, 0xe8, 0xdb, 0x6e, 0xc8, 0x13, 0x80, 0x4c, 0x28, 0x6d, 0x12, 0xd7, 0x70, 0x53, 0xc4,
	0xd0, 0x31, 0x4e, 0x7e, 0x0c, 0xc3, 0x82, 0xb5, 0x6a, 0x53, 0x4d, 0x64, 0x09, 0x27, 0x4e, 0x60,
	0x50, 0x2b, 0xcc, 0xc4, 0xa7, 0x76, 0x41, 0x1a, 0x34, 0x7f, 0x01, 0xa1, 0x9f, 0x88, 0x5d, 0x00,
	0x6f, 0x9e, 0x7f, 0xbb, 0x85, 0xb6, 0xc7, 0x8d, 0xdc, 0xa1, 0x6a, 0x7b, 0x74, 0x60, 0x9e, 0x00,
	0xbc, 0x57, 0x6c, 0x87, 0xc5, 0x5a, 0x6a, 0x63, 0xbd, 0xa9, 0xa5, 0x36, 0xad, 0x37, 0x36, 0xb6,
	0x8b, 0xb3, 0xed, 0xd6, 0xd4, 0x86, 0xe4, 0x21, 0x84, 0x56, 0x49, 0x04, 0xef, 0xea, 0x90, 0xda,
	0x5c, 0xf3, 0xce, 0xda, 0xfe, 0x1f, 0x6b, 0x5f, 0x5f, 0x7d, 0xdf, 0x4f, 0x83, 0x1f, 0xfb, 0x69,
	0xf0, 0x73, 0x3f, 0x0d, 0xbe, 0xfd, 0x9a, 0xde, 0xbb, 0xb9, 0xc8, 0x85, 0x29, 0x58, 0x6a, 0xad,
	0x5a, 0x69, 0xa3, 0x90, 0x95, 0xab, 0x74, 0x9b, 0x65, 0xa8, 0xf4, 0xca, 0xd7, 0x9a, 0x0e, 0xdc,
	0x27, 0xba, 0xfa, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x05, 0x85, 0xa1, 0x3e, 0x71, 0x03, 0x00, 0x00,
}
